/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_QROMA_MATH_ASYNC_RESPONSE_PB_H_INCLUDED
#define PB_QROMA_MATH_ASYNC_RESPONSE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _MathOperation { 
    MathOperation_MathOp_NotSet = 0, 
    MathOperation_MathOp_Add = 1, 
    MathOperation_MathOp_Subtract = 2, 
    MathOperation_MathOp_Add_And_Subtract = 3 
} MathOperation;

/* Struct definitions */
typedef struct _MathProblem { 
    uint32_t a; 
    uint32_t b; 
    MathOperation op; 
} MathProblem;

typedef struct _MathResult_Add { 
    uint32_t result; 
} MathResult_Add;

typedef struct _MathResult_AddAndSubtract { 
    uint32_t addResult; 
    uint32_t subtractResult; 
} MathResult_AddAndSubtract;

typedef struct _MathResult_Subtract { 
    uint32_t result; 
} MathResult_Subtract;

typedef struct _MathProblemResponse { 
    pb_size_t which_response;
    union {
        MathResult_Add addResult;
        MathResult_Subtract subtractResult;
        MathResult_AddAndSubtract addAndSubtractResult;
    } response; 
} MathProblemResponse;


/* Helper constants for enums */
#define _MathOperation_MIN MathOperation_MathOp_NotSet
#define _MathOperation_MAX MathOperation_MathOp_Add_And_Subtract
#define _MathOperation_ARRAYSIZE ((MathOperation)(MathOperation_MathOp_Add_And_Subtract+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define MathProblem_init_default                 {0, 0, _MathOperation_MIN}
#define MathResult_Add_init_default              {0}
#define MathResult_Subtract_init_default         {0}
#define MathResult_AddAndSubtract_init_default   {0, 0}
#define MathProblemResponse_init_default         {0, {MathResult_Add_init_default}}
#define MathProblem_init_zero                    {0, 0, _MathOperation_MIN}
#define MathResult_Add_init_zero                 {0}
#define MathResult_Subtract_init_zero            {0}
#define MathResult_AddAndSubtract_init_zero      {0, 0}
#define MathProblemResponse_init_zero            {0, {MathResult_Add_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MathProblem_a_tag                        1
#define MathProblem_b_tag                        2
#define MathProblem_op_tag                       3
#define MathResult_Add_result_tag                1
#define MathResult_AddAndSubtract_addResult_tag  1
#define MathResult_AddAndSubtract_subtractResult_tag 2
#define MathResult_Subtract_result_tag           1
#define MathProblemResponse_addResult_tag        1
#define MathProblemResponse_subtractResult_tag   2
#define MathProblemResponse_addAndSubtractResult_tag 3

/* Struct field encoding specification for nanopb */
#define MathProblem_FIELDLIST(X, a_) \
X(a_, STATIC,   SINGULAR, UINT32,   a,                 1) \
X(a_, STATIC,   SINGULAR, UINT32,   b,                 2) \
X(a_, STATIC,   SINGULAR, UENUM,    op,                3)
#define MathProblem_CALLBACK NULL
#define MathProblem_DEFAULT NULL

#define MathResult_Add_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   result,            1)
#define MathResult_Add_CALLBACK NULL
#define MathResult_Add_DEFAULT NULL

#define MathResult_Subtract_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   result,            1)
#define MathResult_Subtract_CALLBACK NULL
#define MathResult_Subtract_DEFAULT NULL

#define MathResult_AddAndSubtract_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   addResult,         1) \
X(a, STATIC,   SINGULAR, UINT32,   subtractResult,    2)
#define MathResult_AddAndSubtract_CALLBACK NULL
#define MathResult_AddAndSubtract_DEFAULT NULL

#define MathProblemResponse_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,addResult,response.addResult),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,subtractResult,response.subtractResult),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,addAndSubtractResult,response.addAndSubtractResult),   3)
#define MathProblemResponse_CALLBACK NULL
#define MathProblemResponse_DEFAULT NULL
#define MathProblemResponse_response_addResult_MSGTYPE MathResult_Add
#define MathProblemResponse_response_subtractResult_MSGTYPE MathResult_Subtract
#define MathProblemResponse_response_addAndSubtractResult_MSGTYPE MathResult_AddAndSubtract

extern const pb_msgdesc_t MathProblem_msg;
extern const pb_msgdesc_t MathResult_Add_msg;
extern const pb_msgdesc_t MathResult_Subtract_msg;
extern const pb_msgdesc_t MathResult_AddAndSubtract_msg;
extern const pb_msgdesc_t MathProblemResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MathProblem_fields &MathProblem_msg
#define MathResult_Add_fields &MathResult_Add_msg
#define MathResult_Subtract_fields &MathResult_Subtract_msg
#define MathResult_AddAndSubtract_fields &MathResult_AddAndSubtract_msg
#define MathProblemResponse_fields &MathProblemResponse_msg

/* Maximum encoded size of messages (where known) */
#define MathProblemResponse_size                 14
#define MathProblem_size                         14
#define MathResult_AddAndSubtract_size           12
#define MathResult_Add_size                      6
#define MathResult_Subtract_size                 6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
