/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_HELLO_QROMA_WITH_PB_RESPONSE_PB_H_INCLUDED
#define PB_HELLO_QROMA_WITH_PB_RESPONSE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _HelloQroma { 
    char name[20]; 
} HelloQroma;

typedef struct _HelloQromaResponse { 
    char response[30]; 
    uint32_t callCount; 
    uint32_t nameLength; 
} HelloQromaResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define HelloQroma_init_default                  {""}
#define HelloQromaResponse_init_default          {"", 0, 0}
#define HelloQroma_init_zero                     {""}
#define HelloQromaResponse_init_zero             {"", 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define HelloQroma_name_tag                      1
#define HelloQromaResponse_response_tag          1
#define HelloQromaResponse_callCount_tag         2
#define HelloQromaResponse_nameLength_tag        3

/* Struct field encoding specification for nanopb */
#define HelloQroma_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1)
#define HelloQroma_CALLBACK NULL
#define HelloQroma_DEFAULT NULL

#define HelloQromaResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   response,          1) \
X(a, STATIC,   SINGULAR, UINT32,   callCount,         2) \
X(a, STATIC,   SINGULAR, UINT32,   nameLength,        3)
#define HelloQromaResponse_CALLBACK NULL
#define HelloQromaResponse_DEFAULT NULL

extern const pb_msgdesc_t HelloQroma_msg;
extern const pb_msgdesc_t HelloQromaResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define HelloQroma_fields &HelloQroma_msg
#define HelloQromaResponse_fields &HelloQromaResponse_msg

/* Maximum encoded size of messages (where known) */
#define HelloQromaResponse_size                  43
#define HelloQroma_size                          21

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
